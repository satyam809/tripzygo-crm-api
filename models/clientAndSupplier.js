const mongoose = require('mongoose');

const clientAndSupplierSchema = new mongoose.Schema({
  userType: Number,
  source: String,
  countryCode: String,
  firstName: String,
  lastName: String,
  email: String,
  password: String,
  emailsignature: String,
  roleId: String,
  profileId: Number,
  phone: String,
  mobile: String,
  fax: String,
  website: String,
  dob: String,
  address: String,
  city: String,
  state: String,
  zip: String,
  country: String,
  company: String,
  companyLogo: String,
  noofusers: Number,
  expiryDate: String,
  timeFormat: String,
  currency: Number,
  timeZone: Number,
  serverspace: Number,
  status: Number,
  accountId: Number,
  deletestatus: Number,
  parentId: Number,
  superParentId: Number,
  admin: Number,
  profilePhoto: String,
  dateAdded: Number,
  addedBy: Number,
  modifyDate: Number,
  modifyBy: Number,
  onlineStatus: Number,
  cLogin: String,
  lLogin: String,
  lastIp: String,
  currentIp: String,
  destinationList: String,
  sessionTime: String,
  uSession: String,
  userLoginType: String,
  companyId: Number,
  sessionId: Number,
  siteName: String,
  siteURL: String,
  contactEmail: String,
  emailTo: String,
  headerBg: String,
  agentMessageBg: String,
  visitorMessageBg: String,
  headerText: String,
  agentMessageText: String,
  visitorMessageText: String,
  widgetWidth: Number,
  onlineHeader: String,
  offlineHeader: String,
  autoMsg: String,
  autoMsgTime: Number,
  headerStatus: String,
  WidgetStatus: Number,
  theme: Number,
  fromName: String,
  emailAccount: String,
  emailPassword: String,
  smtpServer: String,
  emailPort: String,
  securityType: String,
  invoiceCompany: String,
  invoiceEmail: String,
  invoicePhone: String,
  invoiceAddress: String,
  invoiceTerms: String,
  invoiceLogo: String,
  invoicepaymentMode: String,
  contactPerson: String,
  companyType: Number,
  destinationId: String,
  serviceType: String,
  inclusion: String,
  exclusion: String,
  systemLanguage: String,
  managerId: Number,
  firebasetoken: String,
  extraadult: String,
  extrachild: String,
  agentcategory: Number,
  importantTitle: String,
  importantDetails: String,
  category: Number,
  smsAlert: Number,
  mailConfirmStatus: Number,
  mobileCode: Number,
  themeColor: String,
  submitName: String,
  email2: String,
  mobile2: String,
  mobileCode2: String,
  marriageAnniversary: String,
  onlineSessionDate: String
},
{
    collection: 'clientsAndSuppliers',
    timestamps: false,
    versionKey: '__v', // Enable versioning
    minimize: false // Override default behavior to store empty objects
});

const ClientAndSupplier = mongoose.model('ClientAndSupplier', clientAndSupplierSchema);

module.exports = ClientAndSupplier;
